{
  "version": 3,
  "sources": ["../dom/query.ts", "../util/draggable.ts", "../util/clamp.ts", "draggable.ts"],
  "sourcesContent": ["export const find = (scope: HTMLElement | Document, selector: string) => scope.querySelector(selector) as HTMLElement\n\nexport const findAll = (scope: HTMLElement | Document, selector: string) => [].slice.call(scope.querySelectorAll(selector)) as HTMLElement[]\n\nexport const query = (selector: string) => find(document, selector)\n\nexport const queryAll = (selector: string) => findAll(document, selector)\n", "type OnStartEvent = (e: Event) => any\ntype OnMoveEvent = (e: Event, dx: number, dy: number) => any\ntype OnEndEvent = (e: Event, dx: number, dy: number) => any\n\n\nexport function draggable (el: HTMLElement) {\n  let startX: number\n  let startY: number\n  let dX: number\n  let dY: number\n\n  el.addEventListener(\"mousedown\", _onStart)\n  el.addEventListener(\"touchstart\", _onStart)\n\n  const noop = () => {}\n\n  let onstart: OnStartEvent = noop\n  let onmove: OnMoveEvent = noop\n  let onend: OnEndEvent = noop\n\n  return {\n    onstart (cb: OnStartEvent) { onstart = cb },\n    onmove (cb: OnMoveEvent) { onmove = cb },\n    onend (cb: OnEndEvent) { onend = cb },\n    removeListeners () {\n      el.removeEventListener(\"mousedown\", _onStart)\n      el.removeEventListener(\"touchstart\", _onStart)\n    }\n  }\n\n\n  function _onStart (e: MouseEvent | TouchEvent) {\n    [startX, startY] = positions(e)\n    if (onstart(e) !== false) addGlobalListeners() // return false to abort drag\n  }\n\n\n  function _onMove (e: MouseEvent | TouchEvent) {\n    const [clientX, clientY] = positions(e)\n    dX = clientX - startX\n    dY = clientY - startY\n    onmove(e, dX, dY)\n  }\n\n\n  function _onEnd (e: MouseEvent | TouchEvent) {\n    // This is called by both mouseup and touchend. However touchend does not have touch positions in the event so we can't get the last position the user *was* touching from this event.\n    onend(e, dX, dY)\n    startX = undefined\n    startY = undefined\n    dX = undefined\n    dY = undefined\n    removeGlobalListeners()\n  }\n\n\n  function positions (e: MouseEvent | TouchEvent) {\n    if (e.type.indexOf(\"mouse\") === 0) {\n      e = e as MouseEvent\n      return [e.clientX, e.clientY]\n    } else {\n      e = e as TouchEvent\n      if (e.touches.length > 0) {\n        return [e.touches[0].clientX, e.touches[0].clientY]\n      }\n    }\n    return [NaN, NaN]\n  }\n\n\n  // We bind events to window because window continues to fire events when the cursor is outside the viewport.\n\n\n  function addGlobalListeners () {\n    window.addEventListener(\"mousemove\", _onMove)\n    window.addEventListener(\"mouseup\", _onEnd)\n    window.addEventListener(\"touchmove\", _onMove)\n    window.addEventListener(\"touchend\", _onEnd)\n  }\n\n\n  function removeGlobalListeners () {\n    window.removeEventListener(\"mousemove\", _onMove)\n    window.removeEventListener(\"mouseup\", _onEnd)\n    window.removeEventListener(\"touchmove\", _onMove)\n    window.removeEventListener(\"touchend\", _onEnd)\n  }\n}\n\n\n// function isLeftClick(e: Event) {\n//   if (e.type.indexOf(\"mouse\") === 0) {\n//     return (e as MouseEvent).button === 0\n//   }\n// }\n\n// function isCtrlKeyPressed(e: Event) {\n//   if (e.type.indexOf(\"mouse\") === 0) {\n//     return (e as MouseEvent).ctrlKey\n//   }\n// }\n", "const clamp = (min: number, value: number, max: number) => {\n  if (min !== null && min !== undefined && value < min) return min\n  if (max !== null && max !== undefined && value > max) return max\n  return value\n}\n\nexport { clamp }", "import { query } from \"../dom\"\nimport { draggable } from \"../util/draggable\"\nimport { clamp } from \"../util/clamp\"\n\nconst note = query(\".note\")\nnote.innerText = \"M\"\n\n\n{\n  // Drag anywhere example\n\n  let left: number\n  let top: number\n\n  const handle = query(\".drag-anywhere-handle\")\n  console.log(handle)\n\n  const Drag = draggable(handle)\n\n  Drag.onstart((e) => {\n    e.preventDefault() // Prevent the document itself from scrolling up and down. There are times where you might want that behaviour (eg when implementing a horizontal slider) so draggable leaves this up to you.\n\n    // At the start of a drag we measure and save the left/top offsets\n    const styles = window.getComputedStyle(handle)\n    left = parseFloat(styles.left)\n    top = parseFloat(styles.top)\n\n    requestAnimationFrame(() => {\n      handle.classList.add(\"is-dragging\")\n    })\n  })\n\n  Drag.onmove((e, dx, dy) => {\n    // dx and xy represent the change from the initial start position\n    // During a drag we set these in a transform\n    requestAnimationFrame(() => {\n      handle.style.transform = `translateX(${dx}px) translateY(${dy}px)`\n    })\n  })\n\n  Drag.onend((e, dx, dy) => {\n    // At the end of a drag we save the new left/top offsets by adding the dx/dy\n    left += dx\n    top += dy\n    // And finally remove the transforms and reset the left/top to the final position\n    requestAnimationFrame(() => {\n      handle.style.left = `${left}px`\n      handle.style.top = `${top}px`\n      handle.style.transform = \"\"\n      handle.classList.remove(\"is-dragging\")\n    })\n  })\n}\n\n\n{\n  // Drag constrained to area\n\n  // In this example we track the left and top positions of the handle as percentages (0-1) relative to its container. This keeps the math simple and lets us clamp the values between 0 and 1.\n\n  const handle = query(\".drag-constrained-handle\")\n  const container = query(\".drag-constrained\")\n  const Drag = draggable(handle)\n\n  let handleInitialLeft: number\n  let handleInitialTop: number\n  let containerWidth: number\n  let containerHeight: number\n  let handleLeftPercent: number\n  let handleTopPercent: number\n\n  Drag.onstart(() => {\n    const containerRect = container.getBoundingClientRect()\n\n    // Record initial ppsitions and dimensions\n    handleInitialLeft = handle.offsetLeft\n    handleInitialTop = handle.offsetTop\n    containerWidth = containerRect.width\n    containerHeight = containerRect.height\n\n    requestAnimationFrame(() => {\n      handle.classList.add(\"is-dragging\")\n    })\n  })\n\n  Drag.onmove((e, dx, dy) => {\n    // Calculate the position of the handle as a percentage from 0 to 1\n    const left = (handleInitialLeft + dx) / containerWidth\n    const top = (handleInitialTop + dy) / containerHeight\n\n    // Clamp to no less that 0 and no greater than 1 and save to variables\n    handleLeftPercent = clamp(0, left, 1)\n    handleTopPercent = clamp(0, top, 1)\n\n    // Run DOM writes in rAF\n    requestAnimationFrame(() => {\n      handle.style.left = \"0\"\n      handle.style.top = \"0\"\n      handle.style.transform = `\n        translateX(${handleLeftPercent * containerWidth}px)\n        translateY(${handleTopPercent * containerHeight}px)\n      `\n    })\n  })\n\n  Drag.onend(() => {\n    // Remove transforms and use left/top to set final position\n    requestAnimationFrame(() => {\n      handle.style.left = handleLeftPercent * 100 + \"%\"\n      handle.style.top = handleTopPercent * 100 + \"%\"\n      handle.style.transform = \"\"\n      handle.classList.remove(\"is-dragging\")\n    })\n  })\n}\n"],
  "mappings": "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",
  "names": []
}
